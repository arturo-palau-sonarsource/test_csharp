jobs:
- job: BuildWindowsWithSonarQube
  displayName: Build for Windows\MSBuild With SonarQube
  pool:
    vmImage: 'windows-latest'
  variables:
    SONARQUBE_HOST_URL: https://018f88bbbf8b.ngrok.app
  steps:
  # Make Build Wrapper available
  - pwsh: |
      curl --create-dirs -sSLo $HOME\.sonar\build-wrapper-win-x86.zip ${{variables.SONARQUBE_HOST_URL}}/static/cpp/build-wrapper-win-x86.zip
      unzip -o $HOME\.sonar\build-wrapper-win-x86.zip -d $HOME\.sonar\
    displayName: Download and install build wrapper
  - task: SonarQubePrepare@5
    inputs:
      SonarQube: 'sq99' # Name of the SonarQube service endpoint you created
      scannerMode: 'MSBuild'
      configMode: 'file'
      extraProperties: |
        "sonar.cfamily.build-wrapper-output=s/build_wrapper_output_directory"
        "sonar.verbose=true"
      projectKey: 'test_sq_cpp_csharp'
  - script: nuget restore CPlusPlusAndCSharp.sln
    displayName: 'Restore NuGet packages'
    # Command Line task to run your build.
  - pwsh: |
      $path = vswhere -latest -requires Microsoft.Component.MSBuild -find MSBuild\**\Bin\MSBuild.exe | select-object -first 1
      & "$HOME\.sonar\build-wrapper-win-x86\build-wrapper-win-x86-64.exe" --out-dir build_wrapper_output_directory $path CPlusPlusAndCSharp.sln /t:rebuild /nodeReuse:false
    workingDirectory: .
    displayName: Build in build-wrapper
  - task: PowerShell@2
    displayName: Check File Directory
    inputs:
      targetType: 'inline'
      script: |
        $filePath = "build_wrapper_output_directory\build-wrapper-dump.json"
        $file = Get-Item -Path $filePath -ErrorAction SilentlyContinue
        if ($file) {
          $file.DirectoryName | Write-Host
        } else {
          Write-Host "File not found."
        }
  - task: SonarQubeAnalyze@5
  - task: SonarQubePublish@5
